{"version":3,"sources":["components/CalcButton.js","components/Board.js","components/OutputScreen.js","components/ThemeChanger.js","components/App.js","index.js"],"names":["CalcButton","colorType","value","onClick","className","Board","buffer","setBuffer","useState","currentOperation","setCurrentOperation","result","setResult","processClick","isNaN","parseInt","operation","String","Number","length","substring","includes","processOperation","processNumber","getButtonType","element","map","OutputScreen","ThemeChanger","checkedTheme","onChange","theme","type","name","checked","App","outputValue","setOutputValue","localStorage","getItem","currentTheme","setCurrentTheme","useEffect","alert","setItem","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9b43346.chunk.js","sourcesContent":["const CalcButton = ({ colorType = \"\", value, onClick = \"\" }) => {\n  return (\n    <div\n      className={`calcButton roundedBorders ${colorType}`}\n      data-testid={value}\n      onClick={() => onClick(value)}\n    >\n      {\" \"}\n      {value}\n    </div>\n  );\n};\n\nexport default CalcButton;\n","import { useState } from \"react\";\nimport CalcButton from \"./CalcButton\";\n\nconst Board = ({ buffer, setBuffer }) => {\n  const [currentOperation, setCurrentOperation] = useState(null);\n  const [result, setResult] = useState(0);\n\n  const boardElements = [\n    \"7\",\n    \"8\",\n    \"9\",\n    \"DEL\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"+\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"-\",\n    \".\",\n    \"0\",\n    \"/\",\n    \"x\",\n    \"RESET\",\n    \"=\",\n  ];\n\n  function processClick(value) {\n    if (!isNaN(parseInt(value))) {\n      processNumber(value);\n    } else {\n      processOperation(value);\n    }\n  }\n\n  function processNumber(value) {\n    if (buffer === \"0\") {\n      setBuffer(value);\n    } else {\n      setBuffer(buffer + \"\" + value);\n    }\n  }\n\n  function processOperation(operation) {\n    if (operation === \"=\") {\n      switch (currentOperation) {\n        case \"+\":\n          setBuffer(String(Number(result) + Number(buffer)));\n          break;\n        case \"-\":\n          setBuffer(String(Number(result) - Number(buffer)));\n          break;\n        case \"x\":\n          setBuffer(String(Number(result) * Number(buffer)));\n          break;\n        case \"/\":\n          setBuffer(String(Number(result) / Number(buffer)));\n          break;\n        default:\n          break;\n      }\n    } else if (operation === \"DEL\") {\n      if (buffer === \"0\") {\n        return;\n      } else if (buffer.length === 1) {\n        setBuffer(\"0\");\n      } else {\n        setBuffer(buffer.substring(0, buffer.length - 1));\n      }\n    } else if (operation === \"RESET\") {\n      setResult(0);\n      setBuffer(\"0\");\n    } else if (operation === \".\") {\n      if (!String(buffer).includes(\".\")) {\n        setBuffer(buffer + \".\");\n      }\n      return;\n    } else {\n      // When math opations are clicked\n      setResult(buffer);\n      setCurrentOperation(operation);\n      setBuffer(\"0\");\n      return;\n    }\n    setCurrentOperation(null);\n  }\n\n  function getButtonType(element) {\n    switch (element) {\n      case \"DEL\":\n        return \"sysFunction delButton\";\n      case \"RESET\":\n        return \"sysFunction resetButton\";\n      case \"=\":\n        return \"resultsButton\";\n      default:\n        return \"\";\n    }\n  }\n\n  return (\n    <div className=\"board roundedBorders\">\n      {boardElements.map((element) => (\n        <CalcButton\n          key={element}\n          value={element}\n          colorType={getButtonType(element)}\n          onClick={processClick}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Board;\n","const OutputScreen = ({ value }) => {\n  return (\n    <div data-testid=\"screen\" className=\"outputScreen roundedBorders\">\n      {value}\n    </div>\n  );\n};\n\nexport default OutputScreen;\n","const ThemeChanger = ({ checkedTheme, onChange }) => {\n  const themes = [\"theme1\", \"theme2\", \"theme3\"];\n\n  function getChecked(name) {\n    return true ? name === checkedTheme : false;\n  }\n\n  return (\n    <div className=\"themeChanger\">\n      {themes.map((theme) => (\n        <label className=\"radio\" key={theme}>\n          <span className=\"radio__input\">\n            <input\n              key={theme}\n              className={`${theme}`}\n              type=\"radio\"\n              name=\"themeToggle\"\n              value={theme}\n              onChange={() => onChange(theme)}\n              checked={getChecked(theme)}\n            ></input>\n            <span className=\"radio__control\"></span>\n          </span>\n          <span className=\"radio__label\">{theme[theme.length - 1]}</span>\n        </label>\n      ))}\n    </div>\n  );\n};\n\nexport default ThemeChanger;\n","import { useEffect, useState } from \"react\";\nimport Board from \"./Board\";\nimport OutputScreen from \"./OutputScreen\";\nimport ThemeChanger from \"./ThemeChanger\";\n\nfunction App() {\n  // eslint-disable-next-line no-unused-vars\n  const [outputValue, setOutputValue] = useState(\"0\");\n  const [currentTheme, setCurrentTheme] = useState(\n    localStorage.getItem(\"theme\") || \"theme1\"\n  );\n\n  function handleThemeToggle(theme) {\n    setCurrentTheme(theme);\n  }\n\n  useEffect(() => {\n    if (outputValue.length > 11) {\n      setOutputValue(\"99999999999\");\n      alert(\"Exceeded maximum amount of numbers on screen\");\n    }\n  }, [outputValue]);\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", currentTheme);\n  }, [currentTheme]);\n\n  return (\n    <div className={`App ${currentTheme}`}>\n      <ThemeChanger checkedTheme={currentTheme} onChange={handleThemeToggle} />\n      <OutputScreen value={outputValue} />\n      <Board buffer={outputValue} setBuffer={setOutputValue} />\n      <div className=\"attribution\">\n        Challenge by{\" \"}\n        <a href=\"https://www.frontendmentor.io?ref=challenge\">\n          Frontend Mentor\n        </a>\n        . Coded by <a href=\"https://github.com/DranelM\">Dranel</a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport \"./styles/OutputScreen.css\";\nimport \"./styles/CalcButton.css\";\nimport \"./styles/Board.css\";\nimport \"./styles/App.css\";\nimport \"./styles/ThemeChanger.css\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}